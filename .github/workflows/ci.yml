name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Install dependencies
      run: make install-deps

    - name: Check formatting
      run: |
        unformatted=$(gofmt -l $(git ls-files '*.go'))
        if [ -n "$unformatted" ]; then
          echo "The following files are not formatted:" >&2
          echo "$unformatted" >&2
          exit 1
        fi

    - name: Run linter
      run: make lint
    
    - name: Run tests
      run: make test
    
    - name: Build all binaries
      run: make build
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.go-version }}
        path: bin/

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build broker image
      uses: docker/build-push-action@v5
      with:
        context: ./broker
        push: false
        tags: fem-broker:latest
    
    - name: Build router image
      uses: docker/build-push-action@v5
      with:
        context: ./router
        push: false
        tags: fem-router:latest
    
    - name: Build coder image
      uses: docker/build-push-action@v5
      with:
        context: ./bodies/coder
        push: false
        tags: fem-coder:latest

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Build binaries
      run: make build
    
    - name: Generate certificates
      run: make gen-certs
    
    - name: Start broker
      run: |
        ./bin/fem-broker --listen :4433 &
        sleep 2
    
    - name: Test echo functionality
      run: |
        echo '{"ping":1}' | timeout 5s openssl s_client -connect localhost:4433 -quiet || true